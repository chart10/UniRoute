{"version":3,"sources":["components/pages/images/PeopleDriving.jpg","components/pages/images/Directions Example.PNG","components/Map.js","components/Logout.js","App.js","reportWebVitals.js","components/Navbar.js","components/UseToken.js","components/pages/Login.js","components/pages/GetRoute.js","components/pages/AddressList.js","components/pages/ScheduledRoute.js","components/pages/ScheduleList.js","components/pages/Schedule.js","components/pages/EditProfile.js","components/pages/Profile.js","components/pages/apiRegisterCall.js","components/pages/Register.js","components/pages/Landing.js","index.js"],"names":["module","exports","__webpack_require__","p","Map","props","panelStyle","height","width","overflow","backgroundColor","position","marginLeft","marginTop","directions","display","count","useRef","useEffect","console","log","current","directionsRequest","React","createElement","LoadScript","googleMapsApiKey","process","GoogleMap","className","mapContainerStyle","center","lat","lng","address","zoom","DirectionsService","options","callback","e","res","status","setDirections","id","style","Fragment","DirectionsRenderer","panel","document","getElementById","Logout","App","setDirectionsRequest","reportWebVitals","onPerfEntry","Function","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","_useState","useState","_useState2","_slicedToArray","click","setClick","handleClick","closeMobileMenu","navigate","useNavigate","localStorage","getItem","IconContext","Provider","value","color","Link","to","AiOutlineDeploymentUnit","onClick","FaTimes","FaBars","NavLink","isActive","FaSearchLocation","_ref2","TbLogin","_ref3","CgProfile","_ref4","CgInfo","_ref5","_ref6","clear","replace","BiExit","_ref7","useToken","userToken","getToken","token","setToken","setItem","removetoken","removeItem","Login","errorMessage","setErrorMessage","_useState3","username","password","_useState4","loginForm","setloginForm","handleChange","event","_event$target","target","name","prevNote","_objectSpread","_defineProperty","class","querySelector","for","onChange","type","placeholder","axios","method","url","data","response","access_token","catch","error","headers","preventDefault","GetRoute","_useOutletContext$","useOutletContext","addressData","setAddressData","origin","setOrigin","destination","setDestination","_useState5","_useState6","travelMode","setTravelMode","_useState7","_useState8","transitOptions","setTransitOptions","_useState9","_useState10","showOriginDropdown","setShowOriginDropdown","_useState11","_useState12","showDestDropdown","setShowDestDropdown","Authorization","address_list","htmlFor","onFocus","onBlur","relatedTarget","classList","contains","tabIndex","length","map","index","key","today","Date","departure","setHours","substring","setMinutes","departureTime","arrival","arrivalTime","selected","AddressList","newAddress","setNewAddress","concat","_toConsumableArray","updatedList","filter","item","removeAddress","ScheduledRoute","weekday","scheduledDirections","route","dayOfWeek","weekdayIndex","departArrive","timeOfDay","onRouteClicked","routeID","updatedSchedule","setScheduledDirecitons","removeScheduledDirections","ScheduleList","day","Schedule","Array","fill","setDayOfWeek","scheduledOrigin","setScheduledOrigin","scheduledDestination","setScheduledDestination","scheduledTravelMode","setScheduledTravelMode","setDepartArrive","scheduledTime","setScheduledTime","_useState13","_useState14","errorMessageRoute","setErrorMessageRoute","_useState15","_useState16","_useState17","_useState18","_useState19","_useState20","getOnChangeWithIndex","newDayOfWeek","validDays","EditProfile","onClose","firstName","lastName","university","editProfileForm","setEditProfileForm","Profile","profileData","setProfileData","showEditProfile","setShowEditProfile","apiRegisterCall","_classCallCheck","this","_createClass","body","fetch","Content-Type","JSON","stringify","json","RegisterForm","setUserName","setPassword","setUniversity","email","setEmail","setFirstName","setLastName","onSubmit","Register","Landing","src","img","img2","AppLayout","Outlet","context","router","createBrowserRouter","element","children","path","createRoot","render","RouterProvider"],"mappings":"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","file":"static/js/main.edd14eae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/PeopleDriving.9327b010.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Directions Example.074ec1f7.PNG\";","import React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport './Map.css';\nimport {\n  DirectionsRenderer,\n  DirectionsService,\n  GoogleMap,\n  LoadScript,\n} from '@react-google-maps/api';\n\n/** Component: Google Interactive Map\n * This is the interactive map that will display route query results */\n\nconst Map = (props) => {\n  const API_KEY = process.env.REACT_APP_MAPS_API_KEY;\n\n  const containerStyle = {\n    width: '100%',\n    height: '90vh',\n  };\n\n  const panelStyle = {\n    height: '75%',\n    width: '30%',\n    overflow: 'scroll',\n    backgroundColor: 'white',\n    position: 'relative',\n    marginLeft: '50px',\n    marginTop: '100px',\n  };\n  if (!props.directions) {\n    panelStyle.display = 'none';\n  }\n\n  // The location for the center of the map\n  const atlanta = {\n    lat: 33.747366971178586,\n    lng: -84.38854681301125,\n    address: 'atlanta ga',\n  };\n  // The zoom level of the map\n  const zoomLevel = 12;\n\n  const limit = 1;\n  let count = useRef(0);\n  const directionsCallback = (res) => {\n    if (res !== null && count.current < limit) {\n      if (res.status === 'OK') {\n        count.current += 1;\n        props.setDirections(res);\n      } else {\n        count.current = 0;\n        console.log('res: ', res);\n      }\n    }\n  };\n\n  useEffect(() => {\n    console.log('direction request changed');\n    count.current = 0;\n  }, [props.directionsRequest]);\n\n  // Return JSX: map display\n  return (\n    <LoadScript googleMapsApiKey={API_KEY}>\n      <GoogleMap\n        className='google-map'\n        mapContainerStyle={containerStyle}\n        center={atlanta}\n        zoom={zoomLevel}\n      >\n        {props.directionsRequest && (\n          <DirectionsService\n            options={props.directionsRequest}\n            callback={(e) => directionsCallback(e)}\n          />\n        )}\n        <div id='panel' style={panelStyle}></div>\n\n        {props.directions !== null && (\n          <>\n            <DirectionsRenderer\n              directions={props.directions}\n              //directions={transformDirections(directions)}\n              panel={document.getElementById('panel')}\n              // onLoad={(directionsRenderer) =>\n              //   setDirectionsRenderer(directionsRenderer)\n              // }\n            />\n          </>\n        )}\n      </GoogleMap>\n    </LoadScript>\n  );\n};\n\nMap.propTypes = {\n  directionsRequest: PropTypes.object,\n  directions: PropTypes.object,\n  setDirections: PropTypes.func,\n};\n\nexport default Map;\n","// Logout function\nconst Logout = () => {\n  \n  \n};\n\nexport default Logout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './App.css';\nimport Map from './components/Map';\nimport Logout from './components/Logout';\n\nfunction App(props) {\n  return (\n    <div className='App'>\n      <header className='App-header'></header>\n      <Logout />\n      <Map\n        directions={props.directions}\n        setDirections={props.setDirections}\n        directionsRequest={props.directionsRequest}\n        setDirectionsRequest={props.setDirectionsRequest}\n      />\n    </div>\n  );\n}\n\nApp.propTypes = {\n  directions: PropTypes.object,\n  setDirections: PropTypes.func,\n  directionsRequest: PropTypes.object,\n  setDirectionsRequest: PropTypes.func,\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useState } from 'react';\nimport { Link, NavLink, useNavigate } from 'react-router-dom';\nimport './Navbar.css';\nimport { AiOutlineDeploymentUnit } from 'react-icons/ai';\nimport { FaBars, FaTimes } from 'react-icons/fa';\nimport { FaSearchLocation } from 'react-icons/fa';\nimport { CgInfo, CgProfile } from 'react-icons/cg';\nimport { IconContext } from 'react-icons';\nimport { BiExit } from 'react-icons/bi';\nimport { TbLogin } from 'react-icons/tb';\n\nfunction Navbar() {\n  const [click, setClick] = useState(false);\n  const handleClick = () => setClick(!click);\n  const closeMobileMenu = () => setClick(false);\n  const navigate = useNavigate();\n  const logout = () => {\n    localStorage.clear();\n    navigate('/login', { replace: true });\n  };\n\n  if (localStorage.getItem('token') == null) {\n    return (\n      <>\n        <IconContext.Provider value={{ color: '#fff' }}>\n          <nav className='navbar'>\n            <Link to='/' className='navbar-logo'>\n              <AiOutlineDeploymentUnit className='navbar-icon' />\n              UNIROUTE\n            </Link>\n            <div className='menu-icon' onClick={handleClick}>\n              {click ? <FaTimes /> : <FaBars />}\n            </div>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n              <li className='nav-route'>\n                <NavLink\n                  to='/'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Get Route\n                  <FaSearchLocation\n                    className='navbar-icon'\n                    onClick={closeMobileMenu}\n                  />\n                </NavLink>\n              </li>\n              <li className='nav-login'>\n                <NavLink\n                  to='/login'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Log In\n                  <TbLogin className='navbar-icon' onClick={closeMobileMenu} />\n                </NavLink>\n              </li>\n              <li className='nav-register'>\n                <NavLink\n                  to='/register'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Register\n                  <CgProfile\n                    className='navbar-icon'\n                    onClick={closeMobileMenu}\n                  />\n                </NavLink>\n              </li>\n              <li className='nav-info'>\n                <NavLink\n                  to='/landing'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Info\n                  <CgInfo className='navbar-icon' onClick={closeMobileMenu} />\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </IconContext.Provider>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <IconContext.Provider value={{ color: '#fff' }}>\n          <nav className='navbar'>\n            <Link to='/' className='navbar-logo'>\n              <AiOutlineDeploymentUnit className='navbar-icon' />\n              UNIROUTE\n            </Link>\n            <div className='menu-icon' onClick={handleClick}>\n              {click ? <FaTimes /> : <FaBars />}\n            </div>\n            <ul className={click ? 'nav-menu active' : 'nav-menu'}>\n              <li className='nav-route'>\n                <NavLink\n                  to='/'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Get Route\n                  <FaSearchLocation\n                    className='navbar-icon'\n                    onClick={closeMobileMenu}\n                  />\n                </NavLink>\n              </li>\n              <li className='nav-profile'>\n                <NavLink\n                  to='/profile'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Your Profile\n                  <CgProfile\n                    className='navbar-icon'\n                    onClick={closeMobileMenu}\n                  />\n                </NavLink>\n              </li>\n              <li className='nav-logout'>\n                <div className='nav-links' onClick={logout}>\n                  Log Out\n                  <BiExit className='navbar-icon' onClick={closeMobileMenu} />\n                </div>\n              </li>\n              <li className='nav-info'>\n                <NavLink\n                  to='/landing'\n                  className={({ isActive }) =>\n                    'nav-links' + (isActive ? ' activated' : '')\n                  }\n                >\n                  Info\n                  <CgInfo className='navbar-icon' onClick={closeMobileMenu} />\n                </NavLink>\n              </li>\n            </ul>\n          </nav>\n        </IconContext.Provider>\n      </>\n    );\n  }\n}\nexport default Navbar;\n","import { useState } from 'react';\n\n// retrieves token from local storage on browser\nfunction useToken() {\n  function getToken() {\n    const userToken = localStorage.getItem('token');\n    return userToken && userToken;\n  }\n\n  // token and setToken hook\n  const [token, setToken] = useState(getToken());\n\n  // saves authentication token to browser\n  function saveToken(userToken) {\n    localStorage.setItem('token', userToken);\n    setToken(userToken);\n  }\n\n  // removes token from local storage\n  // important for logging out!!!\n  function removetoken() {\n    localStorage.removeItem('token');\n    setToken(null);\n  }\n\n  return {\n    setToken: saveToken,\n    token,\n    removetoken,\n  };\n}\n\nexport default useToken;\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport useToken from '../UseToken';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Login() {\n  const { setToken } = useToken();\n  const navigate = useNavigate();\n  const [errorMessage, setErrorMessage] = useState('');\n  // create React hook for login data, and act of logging in\n  const [loginForm, setloginForm] = useState({\n    username: '',\n    password: '',\n  });\n  // Login function that uses axios to speak to backend\n  function logMeIn(event) {\n    axios({\n      method: 'POST',\n      url: '/token',\n      data: {\n        username: loginForm.username,\n        password: loginForm.password,\n      },\n    })\n      .then((response) => {\n        // adds the login token authentication to the local storage\n        setToken(response.data.access_token);\n        navigate('/Profile');\n      })\n      .catch((error) => {\n        if (error.response) {\n          setErrorMessage('WRONG USERNAME OR PASSWORD');\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n    // uses react hook to set the login data\n    setloginForm({\n      username: '',\n      password: '',\n    });\n\n    event.preventDefault();\n  }\n\n  // handles the chanages to the login form when typing\n  function handleChange(event) {\n    const { value, name } = event.target;\n    setloginForm((prevNote) => ({\n      ...prevNote,\n      [name]: value,\n    }));\n  }\n  function closeLoginOverlay() {\n    const loginOverlay = document.querySelector('.login-overlay');\n    loginOverlay.style.display = 'none';\n  }\n\n  // render the login form if the user is not logged in\n  return (\n    <div class=\"login-overlay\">\n      <div class=\"login-box\">\n       <span className=\"close-button\" onClick={closeLoginOverlay}> &times;</span>\n      <h2>Login</h2>\n      <p>Please Enter Your Username & Password</p>\n      <form class=\"login-form\">\n        <label for=\"username-input\">Username</label>\n        <input\n          onChange={handleChange}\n          type='username'\n          name='username'\n          placeholder='Username'\n          value={loginForm.username}\n        />\n        <label for=\"password-input\">Password</label>\n        <input\n          onChange={handleChange}\n          type='password'\n          name='password'\n          placeholder='Password'\n          value={loginForm.password}\n        />\n        <button onClick={logMeIn}>Submit</button>\n      </form>\n      {errorMessage && <p className='error'> {errorMessage} </p>}\n    </div>\n</div>\n\n  );\n}\n\nexport default Login;\n","import React, { useState, useEffect } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport './pages.css';\nimport axios from 'axios';\n// Component: Route Finder\n// Contains the forms needed to run a route query\n\nfunction GetRoute() {\n  // destructuring the outlet context from index.js\n  const {\n    addressData,\n    setAddressData,\n    directionsRequest,\n    setDirectionsRequest,\n  } = useOutletContext()[0];\n  const [origin, setOrigin] = useState('atlanta');\n  const [destination, setDestination] = useState('norcross');\n  const [travelMode, setTravelMode] = useState('TRANSIT');\n  const [transitOptions, setTransitOptions] = useState({});\n\n  // Autocomplete useStates and useRefs\n  const [showOriginDropdown, setShowOriginDropdown] = useState(false);\n  const [showDestDropdown, setShowDestDropdown] = useState(false);\n\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: '/get_address',\n      headers: {\n        // checks if user is authorized to get data\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n      .then((response) => {\n        setAddressData(response.data.address_list);\n        console.log(response.data.address_list);\n      })\n      // get the response data (user data) ad sets its\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n  }, []);\n\n  // Functions to control input of route information into directionsRequest\n  const onOriginChange = (event) => {\n    setOrigin(event.target.value);\n  };\n  const onDestinationChange = (event) => {\n    setDestination(event.target.value);\n  };\n  const onTravelModeChange = (event) => {\n    setTravelMode(event.target.value);\n  };\n  const onDepartureTimeChange = (event) => {\n    let today = new Date();\n    let departure = {};\n    if (event.target.value !== '') {\n      // Update current date object with user entered departureTime\n      today.setHours(event.target.value.substring(0, 2));\n      today.setMinutes(event.target.value.substring(3, 5));\n      departure = { departureTime: today };\n    } else {\n      departure = { departureTime: null };\n    }\n    setTransitOptions({\n      ...transitOptions,\n      ...departure,\n    });\n  };\n  const onArrivalTimeChange = (event) => {\n    let today = new Date();\n    let arrival = {};\n    console.log(event.target.value);\n    if (event.target.value !== '') {\n      // Update current date object with user entered arrivalTime\n      today.setHours(event.target.value.substring(0, 2));\n      today.setMinutes(event.target.value.substring(3, 5));\n      arrival = { arrivalTime: today };\n    } else {\n      arrival = { arrivalTime: null };\n    }\n    setTransitOptions({\n      ...transitOptions,\n      ...arrival,\n    });\n  };\n  const onSubmitDirections = () => {\n    if (origin && destination) {\n      setDirectionsRequest({\n        origin,\n        destination,\n        travelMode,\n        transitOptions,\n      });\n      console.log(directionsRequest);\n    }\n  };\n\n  return (\n    <div className='routeForms'>\n      <h2>FIND A ROUTE</h2>\n      <div className='fieldWrapper'>\n        <label htmlFor='from'>Origin </label>\n        <input\n          type='text'\n          id='from'\n          placeholder='enter address'\n          value={origin}\n          onChange={onOriginChange}\n          onFocus={() => setShowOriginDropdown(true)}\n          onBlur={(e) => {\n            console.log(e.relatedTarget);\n            if (\n              !e.relatedTarget ||\n              !e.relatedTarget.classList.contains('addressDropdown')\n            )\n              setShowOriginDropdown(false);\n          }}\n        ></input>\n        {showOriginDropdown && (\n          <div className='addressDropdown' tabIndex={'-1'}>\n            {addressData && addressData.length > 0 && (\n              <>\n                {addressData.map((address, index) => (\n                  <div\n                    key={'address_' + index}\n                    className='addressItem'\n                    onClick={() => {\n                      setOrigin(address);\n                      setShowOriginDropdown(false);\n                    }}\n                  >\n                    {address}\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n      <div className='fieldWrapper'>\n        <label htmlFor='dest'>Destination </label>\n        <input\n          type='text'\n          id='dest'\n          placeholder='enter address'\n          value={destination}\n          onChange={onDestinationChange}\n          onFocus={() => setShowDestDropdown(true)}\n          onBlur={(e) => {\n            console.log(e.relatedTarget);\n            if (\n              !e.relatedTarget ||\n              !e.relatedTarget.classList.contains('addressDropdown')\n            )\n              setShowDestDropdown(false);\n          }}\n        ></input>\n        {showDestDropdown && (\n          <div className='addressDropdown' tabIndex={'-1'}>\n            {addressData && addressData.length > 0 && (\n              <>\n                {addressData.map((address, index) => (\n                  <div\n                    key={'address_' + index}\n                    className='addressItem'\n                    onClick={() => {\n                      setDestination(address);\n                      setShowDestDropdown(false);\n                    }}\n                  >\n                    {address}\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n      {/* TODO: Create Departure/Arrival Time input fields */}\n      <label htmlFor='depart'>Departure Time </label>\n      <input type='time' id='depart' onChange={onDepartureTimeChange}></input>\n      <label htmlFor='arrive'>Arrival Time </label>\n      <input type='time' id='arrive' onChange={onArrivalTimeChange}></input>\n      <b>Select type of Commute </b>\n      <select id='mode' value={travelMode} onChange={onTravelModeChange}>\n        <option value='DRIVING'>Driving</option>\n        <option value='WALKING'>Walking</option>\n        <option value='BICYCLING'>Bicycling</option>\n        <option value='TRANSIT' selected>\n          Transit\n        </option>\n      </select>\n      <input\n        type='button'\n        value='Get Route'\n        onClick={onSubmitDirections}\n      ></input>\n    </div>\n  );\n}\n\nexport default GetRoute;\n","import React, { useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\n\nconst AddressList = () => {\n  const { addressData, setAddressData } = useOutletContext()[0];\n  const [newAddress, setNewAddress] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const onAddressChange = (event) => {\n    setNewAddress(event.target.value);\n  };\n\n  const onSubmitAddress = () => {\n    if (newAddress !== '') {\n      //send newAddress string to backend with '/save_address'\n      axios({\n        method: 'POST',\n        url: '/save_address',\n        headers: {\n          // checks if user is authorized to get data\n          Authorization: 'Bearer ' + localStorage.getItem('token'),\n        },\n        data: {\n          address: newAddress,\n        },\n      })\n        .then((response) => {\n          setErrorMessage('SUCCESSFULLY ADDED ADDRESS!!');\n        })\n        .catch((error) => {\n          if (error.response) {\n            setErrorMessage('FAILED TO SAVE ADDRESS! TRY AGAIN.');\n            console.log(error.response);\n            console.log(error.response.status);\n            console.log(error.response.headers);\n          }\n        });\n      setAddressData([...addressData, newAddress]);\n    }\n  };\n\n  const removeAddress = (address) => {\n    axios({\n      method: 'POST',\n      url: '/remove_address',\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n      data: {\n        address: address,\n      },\n    })\n      .then((response) => {\n        setErrorMessage('SUCCESSFULLY REMOVED ADDRESS!!');\n      })\n      .catch((error) => {\n        if (error.response) {\n          setErrorMessage('FAILED TO REMOVE ADDRESS! TRY AGAIN.');\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n    const updatedList = addressData.filter((item) => item !== address);\n    setAddressData(updatedList);\n  };\n\n  return (\n    <div className='address-book'>\n      <h2>Address Book</h2>\n      <ul className='addressList'></ul>\n      <p>Add a location to your address book: </p>\n      <input\n        type='text'\n        id='addressField'\n        placeholder='enter an address'\n        value={newAddress}\n        onChange={onAddressChange}\n      ></input>\n      <button onClick={onSubmitAddress}>Save</button>\n      {errorMessage && <p className='error'> {errorMessage} </p>}\n      {addressData === null ? (\n        <p>When you save addresses to your profile they will show up here. </p>\n      ) : (\n        <ul className='addressList'>\n          {addressData.map((address, index) => (\n            <li key={'address_' + index} className='userAddress'>\n              <p>{address}</p>\n              <button onClick={() => removeAddress(address)}>Remove</button>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nAddressList.propTypes = {\n  addressData: PropTypes.array,\n};\n\nexport default AddressList;\n","import React from 'react';\nimport axios from 'axios';\nimport './pages.css';\n\nconst ScheduledRoute = (props) => {\n  // This function deletes a given routeID from the database\n  const removeScheduledDirections = (route) => {\n    axios({\n      method: 'POST',\n      url: '/remove_scheduled_directions',\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n      data: {\n        routeID: route.routeID,\n      },\n    }).catch((error) => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n    const updatedSchedule = props.scheduledDirections.filter(\n      (item) => item !== route\n    );\n    props.setScheduledDirecitons(updatedSchedule);\n  };\n\n  const onRouteClicked = (route) => {\n    console.log(\n      route.origin +\n        ', ' +\n        route.destination +\n        ', ' +\n        route.departArrive +\n        ' @ ' +\n        route.timeOfDay\n    );\n    const origin = route.origin;\n    const destination = route.destination;\n    const travelMode = route.travelMode;\n    props.setDirectionsRequest({ origin, destination, travelMode });\n    console.log(props.directionsRequest);\n  };\n\n  return (\n    <>\n      <ul className='weekday'>\n        <h3 className='weekday'>{props.weekday}</h3>\n        {props.scheduledDirections.map((route, index) =>\n          route.dayOfWeek === props.weekdayIndex ? (\n            <li key={'route_' + index}>\n              <div className='route' onClick={() => onRouteClicked(route)}>\n                <p>Origin: {route.origin}</p>\n                <p>Destination: {route.destination}</p>\n                <p>\n                  {route.departArrive} @ {route.timeOfDay}\n                </p>\n              </div>\n              <button onClick={() => removeScheduledDirections(route)}>\n                Remove\n              </button>\n              <br />\n            </li>\n          ) : null\n        )}\n      </ul>\n    </>\n  );\n};\nexport default ScheduledRoute;\n","import React, { useState, useEffect } from 'react';\nimport { useOutletContext } from 'react-router-dom';\nimport axios from 'axios';\nimport './pages.css';\nimport ScheduledRoute from './ScheduledRoute';\n\nconst ScheduleList = (props) => {\n  // scheduleDirections is an array of objects that represent saved routes\n  // route = { 'routeID': int, 'dayOfWeek': int, 'travelMode': string, 'departArrive': string,\n  // 'timeOfDay': hh:mm, 'origin': string, 'destination': string}\n  const [scheduledDirections, setScheduledDirecitons] = useState([]);\n  const weekday = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday',\n  ];\n\n  // UseEffect that pulls user's scheduled directions from the database\n  useEffect(() => {\n    axios({\n      method: 'GET',\n      url: '/get_schedule',\n      headers: {\n        // checks if user is authorized to get data\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n      .then((response) => {\n        console.log(response);\n        setScheduledDirecitons(response.data);\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n  }, []);\n\n  const removeScheduledDirections = (route) => {\n    axios({\n      method: 'POST',\n      url: '/remove_scheduled_directions',\n      headers: {\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n      data: {\n        routeID: route.routeID,\n      },\n    }).catch((error) => {\n      if (error.response) {\n        console.log(error.response);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      }\n    });\n    const updatedSchedule = scheduledDirections.filter(\n      (item) => item !== route\n    );\n    setScheduledDirecitons(updatedSchedule);\n  };\n\n  return (\n    <>\n      {scheduledDirections === null ? (\n        <p>You\\'re weekly scheduled routes will appear here.</p>\n      ) : (\n        <div className='weeklySchedule'>\n          {weekday.map((day, index) => (\n            <ScheduledRoute\n              weekday={day}\n              weekdayIndex={index}\n              scheduledDirections={scheduledDirections}\n              setScheduledDirecitons={setScheduledDirecitons}\n              directionsRequest={props.directionsRequest}\n              setDirectionsRequest={props.setDirectionsRequest}\n            />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\nexport default ScheduleList;\n","import React, { useState } from 'react';\nimport { useOutletContext } from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport axios from 'axios';\nimport './pages.css';\nimport ScheduleList from './ScheduleList';\n\nconst Schedule = () => {\n  const {\n    addressData,\n    setAddressData,\n    directionsRequest,\n    setDirectionsRequest,\n  } = useOutletContext()[0];\n  //console.log(addressData);\n  const [dayOfWeek, setDayOfWeek] = useState(new Array(7).fill(false));\n  const [scheduledOrigin, setScheduledOrigin] = useState('');\n  const [scheduledDestination, setScheduledDestination] = useState('');\n  const [scheduledTravelMode, setScheduledTravelMode] = useState('TRANSIT');\n  const [departArrive, setDepartArrive] = useState('');\n  const [scheduledTime, setScheduledTime] = useState('');\n  // eslint-disable-next-line no-unused-vars\n  const [errorMessageRoute, setErrorMessageRoute] = useState('');\n\n  const [scheduledDirections, setScheduledDirecitons] = useState([]);\n\n  // Autocomplete useStates and useRefs\n  const [showOriginDropdown, setShowOriginDropdown] = useState(false);\n  const [showDestDropdown, setShowDestDropdown] = useState(false);\n\n  const onSubmitRoute = () => {\n    // Make sure valid days are chosen. If no days are chosen return error\n    let validDays = false;\n    dayOfWeek.map((day) => {\n      if (day === true) validDays = true;\n    });\n    if (validDays) {\n      if (scheduledOrigin && scheduledDestination) {\n        axios({\n          method: 'POST',\n          url: '/save_scheduled_directions',\n          headers: {\n            // checks if user is authorized to set data\n            Authorization: 'Bearer ' + localStorage.getItem('token'),\n          },\n          data: {\n            scheduledTravelMode: scheduledTravelMode,\n            departArrive: departArrive,\n            scheduledTime: scheduledTime,\n            scheduledOrigin: scheduledOrigin,\n            scheduledDestination: scheduledDestination,\n            dayOfWeek: dayOfWeek,\n          },\n        })\n          .then((response) => {\n            console.log(response);\n            setErrorMessageRoute('SUCCESSFULLY ADDED ROUTE TO SCHEDULE!');\n          })\n          .catch((error) => {\n            if (error.response) {\n              setErrorMessageRoute('FAILED TO SAVE ROUTE! TRY AGAIN.');\n              console.log(error.response);\n              console.log(error.response.status);\n              console.log(error.response.headers);\n            }\n          });\n        setScheduledDirecitons(scheduledDirections);\n      } else {\n        setErrorMessageRoute('BE SURE TO CHOOSE AN ORIGIN AND A DESTINATION!');\n      }\n    } else {\n      setErrorMessageRoute('BE SURE TO ADD YOUR ROUTE TO A DAY OF THE WEEK!');\n    }\n  };\n\n  // The logic for the checkbox onChange function is weird but it works.\n  // By nesting the onChange function inside the getOnChangeWithIndex function\n  // we can run the inner logic ONCE on each click. If the logic isn't nested then\n  // getOnChangeWithIndex will run on render and then rerender constantly\n  const getOnChangeWithIndex = (day) => {\n    const onChange = () => {\n      let newDayOfWeek = [...dayOfWeek];\n      newDayOfWeek[day] = !dayOfWeek[day];\n      setDayOfWeek(newDayOfWeek);\n    };\n    return onChange;\n  };\n  const onOriginChange = (event) => {\n    setScheduledOrigin(event.target.value);\n  };\n  const onDestinationChange = (event) => {\n    setScheduledDestination(event.target.value);\n  };\n  const onTravelModeChange = (event) => {\n    setScheduledTravelMode(event.target.value);\n  };\n  const onDepartArriveChange = (event) => {\n    setDepartArrive(event.target.value);\n  };\n  const onScheduledTimeChange = (event) => {\n    setScheduledTime(event.target.value);\n  };\n\n  return (\n    <section id='scheduleSection'>\n      <h2>Weekly Schedule</h2>\n      <ul id='weeklySchedule'></ul>\n      <p>Add a route to your weekly schedule:</p>\n      <input\n        type='checkbox'\n        id='Monday'\n        name='day'\n        value='0'\n        onChange={getOnChangeWithIndex(0)}\n      ></input>\n      <label htmlFor='Monday'>Monday</label>\n      <input\n        type='checkbox'\n        id='Tuesday'\n        name='day'\n        value='Tuesday'\n        onChange={getOnChangeWithIndex(1)}\n      ></input>\n      <label htmlFor='Tuesday'>Tuesday</label>\n      <input\n        type='checkbox'\n        id='Wednesday'\n        name='day'\n        value='Wednesday'\n        onChange={getOnChangeWithIndex(2)}\n      ></input>\n      <label htmlFor='Wednesday'>Wednesday</label>\n      <input\n        type='checkbox'\n        id='Thursday'\n        name='day'\n        value='Thursday'\n        onChange={getOnChangeWithIndex(3)}\n      ></input>\n      <label htmlFor='Thursday'>Thursday</label>\n      <input\n        type='checkbox'\n        id='Friday'\n        name='day'\n        value='Friday'\n        onChange={getOnChangeWithIndex(4)}\n      ></input>\n      <label htmlFor='Friday'>Friday</label>\n      <input\n        type='checkbox'\n        id='Saturday'\n        name='Saturday'\n        value='Saturday'\n        onChange={getOnChangeWithIndex(5)}\n      ></input>\n      <label htmlFor='Saturday'>Saturday</label>\n      <input\n        type='checkbox'\n        id='Sunday'\n        name='day'\n        value='Sunday'\n        onChange={getOnChangeWithIndex(6)}\n      ></input>\n      <label htmlFor='Sunday'>Sunday</label>\n      <br />\n      <div className='fieldWrapper'>\n        <label htmlFor='from'>Origin </label>\n        <input\n          type='text'\n          id='from'\n          placeholder='enter address'\n          value={scheduledOrigin}\n          onChange={onOriginChange}\n          onFocus={() => setShowOriginDropdown(true)}\n          onBlur={(e) => {\n            console.log(e.relatedTarget);\n            if (\n              !e.relatedTarget ||\n              !e.relatedTarget.classList.contains('addressDropdown')\n            )\n              setShowOriginDropdown(false);\n          }}\n        ></input>\n        {showOriginDropdown && (\n          <div className='addressDropdown' tabIndex={'-1'}>\n            {addressData && addressData.length > 0 && (\n              <>\n                {addressData.map((address, index) => (\n                  <div\n                    key={'address_' + index}\n                    className='addressItem'\n                    onClick={() => {\n                      setScheduledOrigin(address);\n                      setShowOriginDropdown(false);\n                    }}\n                  >\n                    {address}\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n      <div className='fieldWrapper'>\n        <label htmlFor='dest'>Destination </label>\n        <input\n          type='text'\n          id='dest'\n          placeholder='enter address'\n          value={scheduledDestination}\n          onChange={onDestinationChange}\n          onFocus={() => setShowDestDropdown(true)}\n          onBlur={(e) => {\n            console.log(e.relatedTarget);\n            if (\n              !e.relatedTarget ||\n              !e.relatedTarget.classList.contains('addressDropdown')\n            )\n              setShowDestDropdown(false);\n          }}\n        ></input>\n        {showDestDropdown && (\n          <div className='addressDropdown' tabIndex={'-1'}>\n            {addressData && addressData.length > 0 && (\n              <>\n                {addressData.map((address, index) => (\n                  <div\n                    key={'address_' + index}\n                    className='addressItem'\n                    onClick={() => {\n                      setScheduledDestination(address);\n                      setShowDestDropdown(false);\n                    }}\n                  >\n                    {address}\n                  </div>\n                ))}\n              </>\n            )}\n          </div>\n        )}\n      </div>\n      <b>Select Type of Commute </b>\n      <select\n        id='mode'\n        value={scheduledTravelMode}\n        onChange={onTravelModeChange}\n      >\n        <option value='DRIVING'>Driving</option>\n        <option value='WALKING'>Walking</option>\n        <option value='BICYCLING'>Bicycling</option>\n        <option value='TRANSIT' selected>\n          Transit\n        </option>\n      </select>\n      <br />\n      <label htmlFor='scheduleTime'>Departure or Arrival Time? </label>\n      <select\n        id='scheduleTime'\n        value={departArrive}\n        onChange={onDepartArriveChange}\n      >\n        <option value=''>-- </option>\n        <option value='DEPART'>Departure </option>\n        <option value='ARRIVE'>Arrival </option>\n      </select>\n      <label htmlFor='scheduleArrive'> Time </label>\n      <input\n        type='time'\n        id='scheduleArrive'\n        onChange={onScheduledTimeChange}\n      ></input>\n      <button onClick={onSubmitRoute}>Save</button>\n      {errorMessageRoute && <p className='error'> {errorMessageRoute} </p>}\n      <ScheduleList\n        directionsRequest={directionsRequest}\n        setDirectionsRequest={setDirectionsRequest}\n      />\n      </section>\n  );\n};\nexport default Schedule;\n","import React, { useState } from \"react\";\nimport \"./editProfile.css\"\nimport axios from \"axios\";\n\nfunction EditProfile({ onClose }) {\n    const [editProfileForm, setEditProfileForm] = useState({\n        firstName: '',\n        lastName: '',\n        university: '',\n    });\n\n    const [errorMessage, setErrorMessage] = useState('');\n\n    function updateProfile(event) {\n        axios({\n            method: 'POST',\n            url: '/edit_profile',\n            headers: {\n                Authorization: 'Bearer ' + localStorage.getItem('token'),\n            },\n            data: {\n                firstName: editProfileForm.firstName,\n                lastName: editProfileForm.lastName,\n                university: editProfileForm.university,\n            },\n        }).then((response) => {\n            setErrorMessage(response);\n            onClose();\n        }).catch((error) => {\n            if (error.response) {\n                setErrorMessage('Update Failed');\n                console.log(error.response);\n                console.log(error.response.status);\n                console.log(error.response.headers);\n            }\n        });\n\n        setEditProfileForm({\n            firstName: '',\n            lastName: '',\n            university: ''\n        });\n\n        event.preventDefault();\n    }\n\n    function handleChange(event) {\n        const { value, name } = event.target;\n        setEditProfileForm((prevNote) => ({\n            ...prevNote,\n            [name]: value,\n        }));\n    }\n\n    return (\n        <div className=\"profile-edit-overlay\">\n            <div className=\"profile-edit-box\">\n                <span className=\"close-button\" onClick={onClose}> &times;</span> \n                <p>Please Enter Your First Name, Last Name, and University</p>\n                <form class=\"edit-profile-form\">\n                    <label for=\"first-name-input\">First Name</label>\n                    <input\n                        onChange={handleChange}\n                        name='firstName'\n                        placeholder=\"John\"\n                        value={editProfileForm.firstName}\n                    />\n                    <label for='last-name-input'>Last Name</label>\n                    <input \n                        onChange={handleChange}\n                        name='lastName'\n                        placeholder=\"Doe\"\n                        value={editProfileForm.lastName}\n                    />\n                    <label for='university-input'>University</label>\n                    <input \n                        onChange={handleChange}\n                        name='university'\n                        placeholder=\"Harvard University\"\n                        value={editProfileForm.university}\n                    />\n                    <button onClick={updateProfile}>Submit</button>\n                </form>\n                {errorMessage && <p className=\"error\"> {errorMessage} </p>}\n            </div>\n        </div>\n    );\n}\n\nexport default EditProfile;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useOutletContext } from 'react-router-dom';\nimport axios from 'axios';\nimport useToken from '../UseToken';\nimport AddressList from './AddressList';\nimport './pages.css';\nimport Schedule from './Schedule';\nimport EditProfile from './EditProfile';\n\n// We need to fetch db data in flask\n// and show on screen\nfunction Profile() {\n  const [profileData, setProfileData] = useState(null);\n  const { addressData, setAddressData } = useOutletContext()[0];\n\n  const { setToken } = useToken();\n\n  const [showEditProfile, setShowEditProfile] = useState(false);\n\n  // function that is called to grab data from server\n  useEffect(() => {\n    // axios is used to send the https request\n    axios({\n      method: 'GET',\n      url: '/get_profile',\n      headers: {\n        // checks if user is authorized to get data\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n      .then((response) => {\n        // get the response data (user data) ad sets its\n        const res = response.data;\n        // checks if the session needs to be refreshed\n        res.access_token && setToken(res.access_token);\n        setProfileData({\n          firstName: res.firstName,\n          lastName: res.lastName,\n          university: res.university,\n        });\n      })\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n    axios({\n      method: 'GET',\n      url: '/get_address',\n      headers: {\n        // checks if user is authorized to get data\n        Authorization: 'Bearer ' + localStorage.getItem('token'),\n      },\n    })\n      .then((response) => {\n        setAddressData(response.data.address_list);\n        //console.log(response.data.address_list);\n      })\n      // get the response data (user data) ad sets its\n      .catch((error) => {\n        if (error.response) {\n          console.log(error.response);\n          console.log(error.response.status);\n          console.log(error.response.headers);\n        }\n      });\n  }, []);\n  function closeProfileOverlay() {\n    const profileOverlay = document.querySelector('.profile-overlay');\n    profileOverlay.style.display = 'none';\n  }\n\n  const handleEditProfileClick = () => {\n    setShowEditProfile(true);\n  };\n\n  const handleEditProfileClose = () => {\n    setShowEditProfile(false);\n  };\n\n  return (\n    <div className='profile-overlay'>\n      <div className='profile-box'>\n        <span className='close-button' onClick={closeProfileOverlay}>\n          {' '}\n          &times;\n        </span>\n        {profileData ? (\n          <>\n            <h1>\n              Welcome back! {profileData.firstName} {profileData.lastName}\n            </h1>\n            {/** <p>University: {profileData.university}</p>*/}\n            <button onClick={handleEditProfileClick}>Edit Profile</button>\n            {showEditProfile && (\n              <EditProfile onClose={handleEditProfileClose} />\n            )}\n            <AddressList addressData={addressData} />\n            <Schedule />\n          </>\n        ) : (\n          <>\n            <p>It looks like you aren&apos;t signed in right now.</p>\n            <Link to='../login'>\n              <button>Login</button>\n            </Link>\n            <Link to='../register'>\n              <button>Register</button>\n            </Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Profile;\n","// Component: Registration API\n// This funtion passes user data into the 'users' table of the DB\n\nexport default class apiRegisterCall {\n  static Register(body) {\n    return fetch('/post_register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(body),\n    })\n      .then((response) => response.json())\n      .then(console.log('Sent to backend:', body))\n      .catch((error) => console.log(error));\n  }\n}\n","import React, { useState } from 'react';\nimport apiRegisterCall from './apiRegisterCall.js';\nimport '../../App.css';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './pages.css';\n\n/** Component: Registration\n * Contains the forms needed to create a new user account */\n\n// Set up the hooks for registration input forms\nexport const RegisterForm = () => {\n  const [username, setUserName] = useState('');\n  const [password, setPassword] = useState('');\n  const [university, setUniversity] = useState('');\n  const [email, setEmail] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const navigate = useNavigate();\n\n  // Once the form is submitted, this fuction will run\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    // Calls the fetch function from apiRegister.js\n    apiRegisterCall.Register({\n      username: username,\n      password: password,\n      university: university,\n      email: email,\n      firstName: firstName,\n      lastName: lastName,\n    });\n    console.log('successfully submitted to backend');\n    // Clear form data after successful submission\n    setUserName('');\n    setPassword('');\n    setEmail('');\n    setUniversity('');\n    setFirstName('');\n    setLastName('');\n    // TODO: Send user to their profile page\n    navigate('/login');\n  };\n  function closeRegisterOverlay() {\n    const registerOverlay = document.querySelector('.register-overlay');\n    registerOverlay.style.display = 'none';\n  }\n\n  // Return JSX forms\n  return (\n    <div className='register-overlay'>\n      <div className='register-box'>\n        <span className='close-button' onClick={closeRegisterOverlay}>\n          {' '}\n          &times;\n        </span>\n        <h2>Register</h2>\n        <form className='register-form' onSubmit={handleSubmit}>\n          <label htmlFor='username'>Username</label>\n          <input\n            value={username}\n            name='username'\n            onChange={(e) => setUserName(e.target.value)}\n            id='username'\n            placeholder='Username'\n          />\n\n          <label htmlFor='password'>Password</label>\n          <input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type='password'\n            placeholder='********'\n            id='password'\n            name='password'\n          />\n\n          <label htmlFor='university'>University</label>\n          <input\n            value={university}\n            name='university'\n            onChange={(e) => setUniversity(e.target.value)}\n            id='university'\n            placeholder='University'\n          />\n\n          <label htmlFor='email'>email</label>\n          <input\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            type='email'\n            placeholder='youremail@gmail.com'\n            id='email'\n            name='email'\n          />\n\n          <label htmlFor='firstName'>First Name</label>\n          <input\n            value={firstName}\n            name='firstName'\n            onChange={(e) => setFirstName(e.target.value)}\n            id='firstName'\n            placeholder='first Name'\n          />\n\n          <label htmlFor='lastName'>Last Name</label>\n          <input\n            value={lastName}\n            name='lastName'\n            onChange={(e) => setLastName(e.target.value)}\n            id='lastName'\n            placeholder='Last Name'\n          />\n          <button type='submit'>Submit Registration</button>\n        </form>\n        <Link to='../login'>\n          <button className='submit-button'>\n            Already have an account? Login here.\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\nimport \"./Landing.css\";\nimport img from \"./images/PeopleDriving.jpg\";\nimport img2 from \"./images/Directions Example.PNG\";\n\nfunction Landing() {\n\n    return(\n        <div class=\"landing-overlay\">\n            <div class=\"landing-box\">\n                <div class=\"image-box\">\n                    <img class=\"landing-image\" src={img}/>\n                    <div class=\"text-box\">\n                        <h1 class=\"landing-text-header\">Welcome to UniRoute!</h1>\n                        <h3 class=\"landing-text-description\">Created By: Christian Hart, Eric Rivas and Chandler Dugan</h3>\n                    </div>\n                </div>\n                <div class=\"direction-image-box\">\n                    <img class=\"landing-direction-image\" src={img2}/>\n                    <div class=\"direction-image-text\">\n                        <h1 class=\"text-header\">Get Directions to Wherever you Need!</h1>\n                        <h3 class=\"text-description\">Input your starting point, destination and arrival time to get where you need to go!</h3>\n                    </div>\n                </div>i\n                \n            </div>\n        </div>\n    )\n\n}\n\nexport default Landing;\n","import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport React, { useState } from 'react';\nimport { createRoot } from 'react-dom/client';\nimport { createBrowserRouter, RouterProvider, Outlet } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Login from './components/pages/Login';\nimport GetRoute from './components/pages/GetRoute';\nimport Profile from './components/pages/Profile';\nimport Register from './components/pages/Register';\nimport Landing from './components/pages/Landing';\n\nconst AppLayout = () => {\n  const [directions, setDirections] = useState(null);\n  const [directionsRequest, setDirectionsRequest] = useState(null);\n  const [addressData, setAddressData] = useState(null);\n\n  return (\n    <>\n      <Navbar />\n      <Outlet\n        context={[\n          // directions,\n          // setDirections,\n          {\n            directionsRequest,\n            setDirectionsRequest,\n            addressData,\n            setAddressData,\n          },\n        ]}\n      />\n      <App\n        directions={directions}\n        setDirections={setDirections}\n        directionsRequest={directionsRequest}\n        setDirectionsRequest={setDirectionsRequest}\n      />\n    </>\n  );\n};\n/**Routes for the navbar that gives the path and element */\nconst router = createBrowserRouter([\n  {\n    /** This allows the navbar to cover everything in the navbar*/\n    element: <AppLayout />,\n    children: [\n      {\n        path: '/login',\n        element: <Login />,\n      },\n      {\n        path: '/',\n        element: <GetRoute />,\n      },\n      {\n        path: '/profile',\n        element: <Profile />,\n      },\n      {\n        path: '/register',\n        element: <Register />,\n      },\n      {\n        path: '/landing',\n        element: <Landing />\n      },\n    ],\n  },\n]);\n\ncreateRoot(document.getElementById('root')).render(\n  <RouterProvider router={router} />\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}